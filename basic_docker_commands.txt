- to create an image "docker build -t hello-world ."
- tag name "-t", "." - all from current directory

- "docker ps" - watch running containers
- "docker ps -a" - watch all containers
- "docker images"
- "docker run --name hello" - set name to container and run it
- "docker rm containerID"
- "docker rmi imageID"
- "docker ps -a -q" - view containers ID
- "docker rm $(docker ps -qa)" - deletes all containers
- "docker run --name hello -d hello-world" - run container on the background
- "docker run --name hello -rm -d hello-world" - run container on the background and delete it after stopping
- "docker stop containerName|ID" - stops container
- "docker run --rm --name web -p 8080:8080 web" - host port, second - virtual machine

older version of volumes, docker container is connected to the host machine directory (checks changes, can change smth from inside)
- "docker run --rm --name web -p 8080:8080 -e TZ=Europe/Moscow -v /Users/user/Web/learn/docker/resources:/usr/src/app/resources web"

docker volumes - directories, located on a special path
- "docker volume ls"
- "docker volume create web"

all data`s from container directory is located in a volume as well (helps to save data in DB, restart of container doesn't affect volumes)
data`s that are saved in a container, are saved in a volume as well
volume could be mounted to another container and provide it's data to another container
- "docker run --rm --name web -p 8080:8080 -v web:/usr/src/app/resources web"